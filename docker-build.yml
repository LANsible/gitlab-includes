---
variables:
  # You should overide this variable in the subsequent gitlab-ci file
  DOCKER_IMAGE_NAME: ${CI_REGISTRY_IMAGE}/${CI_COMMIT_REF_SLUG}

.build:
  tags:
    - docker
    - local
  image: lansible/docker-dind-buildx
  variables:
    # To make it possible to pass args from a downstream include
    DOCKER_BUILD_ARGS: ""
    # Default just build amd64
    DOCKER_BUILD_PLATFORMS: linux/amd64

  script:
    - docker run --rm --privileged hypriot/qemu-register
    # Please use `docker context create <context-name>` to create a context for current environment
    - docker context create context-file
    # then create a builder instance with `docker buildx create <context-name>`
    - docker buildx create --use context-file

    # Build and push container
    - if [ -z "$DOCKER_BUILD_ARGS" ]; then
        docker buildx build
        --cache-from ${CI_REGISTRY_IMAGE}/${CI_COMMIT_REF_SLUG}:${CI_COMMIT_SHA}
        --platform ${DOCKER_BUILD_PLATFORMS}
        --tag ${DOCKER_IMAGE_NAME}:${DOCKER_IMAGE_TAG}
        --push .;
      else
        docker buildx build
        --cache-from ${CI_REGISTRY_IMAGE}/${CI_COMMIT_REF_SLUG}:${CI_COMMIT_SHA}
        --platform ${DOCKER_BUILD_PLATFORMS}
        --build-args "${DOCKER_BUILD_ARGS}"
        --tag ${DOCKER_IMAGE_NAME}:${DOCKER_IMAGE_TAG}
        --push .;
      fi

# Build stage
build:
  extends: .build
  stage: build
  variables:
    DOCKER_IMAGE_NAME: ${CI_REGISTRY_IMAGE}/${CI_COMMIT_REF_SLUG}
    DOCKER_IMAGE_TAG: ${CI_COMMIT_SHA}

# Publish branch image
.publish_branch:
  extends: .build
  stage: publish
  only:
    - branches
  variables:
    DOCKER_IMAGE_TAG: ${CI_COMMIT_REF_SLUG}

publish_branch_amd64:
  extends: .publish_branch
  variables:
    DOCKER_BUILD_PLATFORMS: linux/amd64

publish_branch_arm64v8:
  extends: .publish_branch
  variables:
    DOCKER_BUILD_PLATFORMS: linux/arm64/v8

publish_branch_armv7:
  extends: .publish_branch
  variables:
    DOCKER_BUILD_PLATFORMS: linux/arm/v7


# Publish tagged release
.publish_tag:
  extends: .build
  stage: publish
  only:
    - tags
  except:
    - branches
  variables:
    DOCKER_IMAGE_TAG: ${CI_COMMIT_TAG}

publish_tag_amd64:
  extends: .publish_tag
  variables:
    DOCKER_BUILD_PLATFORMS: linux/amd64

publish_tag_arm64v8:
  extends: .publish_tag
  variables:
    DOCKER_BUILD_PLATFORMS: linux/arm64/v8

publish_tag_armv7:
  extends: .publish_tag
  variables:
    DOCKER_BUILD_PLATFORMS: linux/arm/v7


# Publish latest release
.publish_latest:
  extends: .build
  stage: publish
  only:
    - tags
  except:
    - branches
  variables:
    DOCKER_IMAGE_TAG: latest

publish_latest_amd64:
  extends: .publish_latest
  variables:
    DOCKER_BUILD_PLATFORMS: linux/amd64

publish_latest_arm64v8:
  extends: .publish_latest
  variables:
    DOCKER_BUILD_PLATFORMS: linux/arm64/v8

publish_latest_armv7:
  extends: .publish_latest
  variables:
    DOCKER_BUILD_PLATFORMS: linux/arm/v7
