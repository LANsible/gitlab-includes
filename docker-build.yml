---
variables:
  # You should overide this variable in the subsequent gitlab-ci file
  DOCKER_IMAGE_NAME: "${CI_REGISTRY_IMAGE}/${CI_COMMIT_REF_SLUG}"


.build:
  tags:
    - docker
  image: docker:19
  variables:
    # To make it possible to pass args from a downstream include
    DOCKER_BUILD_ARGS: ""

  script:
    # Build and push container
    - if [ -z "$DOCKER_BUILD_ARGS" ]; then
        docker build
        --cache-from ${CI_REGISTRY_IMAGE}/${CI_COMMIT_REF_SLUG}:${CI_COMMIT_SHA}
        --tag ${DOCKER_IMAGE_NAME}:${DOCKER_IMAGE_TAG}
        --label "org.label-schema.build-date=$(date -u +'%Y-%m-%dT%H:%M:%SZ')"
        --label "org.label-schema.name='${CI_PROJECT_TITLE}'"
        --label "org.label-schema.url='https://github.com/LANsible/${CI_PROJECT_NAME}'"
        --label "org.label-schema.vcs-ref='${CI_COMMIT_SHA}'"
        --label "org.label-schema.vcs-url='https://github.com/LANsible/${CI_PROJECT_NAME}'"
        --label "org.label-schema.vendor=LANsible"
        --label "org.label-schema.version='${CI_COMMIT_REF_SLUG}'"
        --label "org.label-schema.schema-version='1.0'"
        --push .;
      else
        docker build
        --cache-from ${CI_REGISTRY_IMAGE}/${CI_COMMIT_REF_SLUG}:${CI_COMMIT_SHA}
        --build-args "${DOCKER_BUILD_ARGS}"
        --tag ${DOCKER_IMAGE_NAME}:${DOCKER_IMAGE_TAG}
        --label "org.label-schema.build-date=$(date -u +'%Y-%m-%dT%H:%M:%SZ')"
        --label "org.label-schema.name='${CI_PROJECT_TITLE}'"
        --label "org.label-schema.url='https://github.com/LANsible/${CI_PROJECT_NAME}'"
        --label "org.label-schema.vcs-ref='${CI_COMMIT_SHA}'"
        --label "org.label-schema.vcs-url='https://github.com/LANsible/${CI_PROJECT_NAME}'"
        --label "org.label-schema.vendor=LANsible"
        --label "org.label-schema.version='${CI_COMMIT_REF_SLUG}'"
        --label "org.label-schema.schema-version='1.0'"
        --push .;
      fi

.manifest:
  tags:
    - docker
  image: docker:19
  script:
    - docker manifest create ${DOCKER_IMAGE_NAME}:${DOCKER_MANIFEST_TAG}
        --amend ${DOCKER_IMAGE_NAME}:${DOCKER_IMAGE_TAG}-amd64
        --amend ${DOCKER_IMAGE_NAME}:${DOCKER_IMAGE_TAG}-arm64v8
    - docker manifest push ${DOCKER_IMAGE_NAME}:${DOCKER_MANIFEST_TAG}


# Build stage
build:
  extends: .build
  stage: build
  variables:
    DOCKER_IMAGE_NAME: ${CI_REGISTRY_IMAGE}/${CI_COMMIT_REF_SLUG}
    DOCKER_IMAGE_TAG: ${CI_COMMIT_SHA}


# Push branch image
.push_branch:
  extends: .build
  stage: push
  only:
    - branches

push_branch_amd64:
  extends: .push_branch
  variables:
    DOCKER_IMAGE_TAG: ${CI_COMMIT_REF_SLUG}-amd64

push_branch_arm64v8:
  extends: .push_branch
  tags:
    - docker
    - arm64v8
  variables:
    DOCKER_IMAGE_TAG: ${CI_COMMIT_REF_SLUG}-arm64v8


# Setup manifests
manifest_branch:
  extends: .manifest
  stage: manifest
  only:
    - branches
  variables:
    DOCKER_MANIFEST_TAG: ${CI_COMMIT_REF_SLUG}
    DOCKER_IMAGE_TAG: ${CI_COMMIT_REF_SLUG}


# Push tagged release
.push_tag:
  extends: .build
  stage: push
  only:
    - tags
  except:
    - branches

push_tag_amd64:
  extends: .push_tag
  variables:
    DOCKER_IMAGE_TAG: ${CI_COMMIT_TAG}-amd64

push_tag_arm64v8:
  extends: .push_tag
  tags:
    - docker
    - arm64v8
  variables:
    DOCKER_IMAGE_TAG: ${CI_COMMIT_TAG}-arm64v8


# Setup manifests
.manifest_tag:
  extends: .manifest
  stage: manifest
  only:
    - tags
  except:
    - branches

push_tag_manifest:
  extends: .manifest_tag
  variables:
    DOCKER_MANIFEST_TAG: ${CI_COMMIT_TAG}
    DOCKER_IMAGE_TAG: ${CI_COMMIT_TAG}

push_tag_manifest:
  extends: .manifest_tag
  variables:
    DOCKER_MANIFEST_TAG: latest
    DOCKER_IMAGE_TAG: ${CI_COMMIT_TAG}
