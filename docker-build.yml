---
variables:
  # You should overide this variable in the subsequent gitlab-ci file
  DOCKER_IMAGE_NAME: "${CI_REGISTRY_IMAGE}/${CI_COMMIT_REF_SLUG}"
  BUILD_ARGS: ""

stages:
  - lint
  - build
  - test
  - push
  - manifest

.build:
  tags:
    - local  # do not run on shared runner
    - docker
  script:
    # Register needed qemu binaries
    - docker run --rm --privileged multiarch/qemu-user-static:register --reset

    # Get last part of job name as architecture
    - export ARCHITECTURE=$(echo ${CI_JOB_NAME} | grep -o '[^_]*$')

    # Pull build stage image to use as cache
    # Might not exist so use || true
    - docker pull ${CI_REGISTRY_IMAGE}/master:${CI_COMMIT_SHA}-${ARCHITECTURE} || true

    # Show command to run
    - echo docker build
        --cache-from ${CI_REGISTRY_IMAGE}/master:${CI_COMMIT_SHA}-${ARCHITECTURE}
        --build-arg "ARCHITECTURE=${ARCHITECTURE}"
        ${BUILD_ARGS}
        --label "org.label-schema.build-date=$(date -u +'%Y-%m-%dT%H:%M:%SZ')"
        --label "org.label-schema.name='${CI_PROJECT_TITLE}'"
        --label "org.label-schema.url='https://github.com/LANsible/${CI_PROJECT_NAME}'"
        --label "org.label-schema.vcs-ref='${CI_COMMIT_SHA}'"
        --label "org.label-schema.vcs-url='https://github.com/LANsible/${CI_PROJECT_NAME}'"
        --label "org.label-schema.vendor=LANsible"
        --label "org.label-schema.version='${CI_COMMIT_REF_SLUG}'"
        --label "org.label-schema.schema-version='1.0'"
        --tag ${DOCKER_IMAGE_NAME}:${DOCKER_IMAGE_TAG}-${ARCHITECTURE}

    # Build and push container
    - docker build
        --cache-from ${CI_REGISTRY_IMAGE}/master:${CI_COMMIT_SHA}-${ARCHITECTURE}
        --build-arg "ARCHITECTURE=${ARCHITECTURE}"
        ${BUILD_ARGS}
        --label "org.label-schema.build-date=$(date -u +'%Y-%m-%dT%H:%M:%SZ')"
        --label "org.label-schema.name='${CI_PROJECT_TITLE}'"
        --label "org.label-schema.url='https://github.com/LANsible/${CI_PROJECT_NAME}'"
        --label "org.label-schema.vcs-ref='${CI_COMMIT_SHA}'"
        --label "org.label-schema.vcs-url='https://github.com/LANsible/${CI_PROJECT_NAME}'"
        --label "org.label-schema.vendor=LANsible"
        --label "org.label-schema.version='${CI_COMMIT_REF_SLUG}'"
        --label "org.label-schema.schema-version='1.0'"
        --tag ${DOCKER_IMAGE_NAME}:${DOCKER_IMAGE_TAG}-${ARCHITECTURE}
        .
    - docker push ${DOCKER_IMAGE_NAME}:${DOCKER_IMAGE_TAG}-${ARCHITECTURE}

.manifest:
  image: lansible/manifest-tool:master
  tags:
    - docker
  script:
    # Push manifest
    - manifest-tool push from-args
        --ignore-missing
        --platforms linux/amd64,linux/arm64,linux/arm
        --template "${DOCKER_IMAGE_NAME}:${DOCKER_IMAGE_TAG}-ARCH"
        --target "${DOCKER_IMAGE_NAME}:${DOCKER_MANIFEST_TAG}"


# Build stage
build_amd64:
  extends: .build
  stage: build
  variables:
    DOCKER_IMAGE_NAME: ${CI_REGISTRY_IMAGE}/${CI_COMMIT_REF_SLUG}
    DOCKER_IMAGE_TAG: ${CI_COMMIT_SHA}


# Push branch image
.push_branch:
  extends: .build
  stage: push
  variables:
    DOCKER_IMAGE_TAG: ${CI_COMMIT_REF_SLUG}
  only:
    - branches

push_branch_amd64:
  extends: .push_branch

push_branch_arm64:
  extends: .push_branch


# Setup manifests
manifest_branch:
  extends: .manifest
  stage: manifest
  only:
    - branches
  variables:
    DOCKER_MANIFEST_TAG: ${CI_COMMIT_REF_SLUG}
    DOCKER_IMAGE_TAG: ${CI_COMMIT_REF_SLUG}


# Push tagged release
.push_tag:
  extends: .build
  stage: push
  variables:
    DOCKER_IMAGE_TAG: ${CI_COMMIT_TAG}
  only:
    - tags
  except:
    - branches

push_tag_amd64:
  extends: .push_tag

push_tag_arm64:
  extends: .push_tag


# Setup manifests
.manifest_tag:
  extends: .manifest
  stage: manifest
  only:
    - tags
  except:
    - branches

push_tag_manifest:
  extends: .manifest_tag
  variables:
    DOCKER_MANIFEST_TAG: ${CI_COMMIT_TAG}
    DOCKER_IMAGE_TAG: ${CI_COMMIT_TAG}

push_latest_manifest:
  extends: .manifest_tag
  variables:
    DOCKER_MANIFEST_TAG: latest
    DOCKER_IMAGE_TAG: ${CI_COMMIT_TAG}

# Push readme to Docker Hub
# https://www.sanisimov.com/2019/03/building-docker-images-for-multiple-architectures/
push_readme:
  stage: manifest
  script:
    - apk add --no-cache jq curl
    - 'token=$(
        curl -s -X POST
          -H "Content-Type: application/json"
          -d "{\"username\": \"$DOCKER_USERNAME\", \"password\": \"$DOCKER_PASSWORD\"}"
          https://hub.docker.com/v2/users/login/
        | jq -r .token
      )'
    - 'jq -n --arg msg "$(<README.md)" "{\"registry\":\"registry-1.docker.io\",\"full_description\": \"$msg\"}"
      | curl -s -o /dev/null -L -w "%{http_code}"
          https://cloud.docker.com/v2/repositories/"${image}"/
          -d @- -X PATCH
          -H "Content-Type: application/json"
          -H "Authorization: JWT ${token}"'
  only:
    - tags
  except:
    - branches
