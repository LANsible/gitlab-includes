---
variables:
  # You should overide this variable in the subsequent gitlab-ci file
  DOCKER_IMAGE_NAME: "${CI_REGISTRY_IMAGE}/${CI_COMMIT_REF_SLUG}"

.build:
  tags:
    - docker
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  variables:
    # To make it possible to pass args from a downstream include
    DOCKER_BUILD_ARGS: ""

  script:
    # Get last part of job name as architecture
    - export ARCHITECTURE=$(echo ${CI_JOB_NAME} | grep -o '[^_]*$')
    # Build and push container
    - /kaniko/executor
        --build-arg "${DOCKER_BUILD_ARGS}"
        --build-arg "ARCHITECTURE=${ARCHITECTURE}"
        --context "${CI_PROJECT_DIR}"
        --dockerfile "${CI_PROJECT_DIR}/Dockerfile"
        --cache=true
        --cache-repo "${CI_REGISTRY_IMAGE}/cache"
        --reproducible
        --destination "${DOCKER_IMAGE_NAME}:${DOCKER_IMAGE_TAG}-${ARCHITECTURE}"

.manifest:
  image: lansible/manifest-tool:master
  tags:
    - docker
  services:
    - docker:19.03-dind
  script:
    # Pull images to be able to create a manifest
    - for arch in amd64 arm64 arm; do
        docker pull "${DOCKER_IMAGE_NAME}:${DOCKER_IMAGE_TAG}-${arch}" || true;
      done
    # Push manifest
    - manifest-tool 
        --docker-cfg /kaniko/.docker/config.json
      push from-args
        --ignore-missing
        --platforms linux/amd64,linux/arm64,linux/arm
        --template "${DOCKER_IMAGE_NAME}:${DOCKER_IMAGE_TAG}-ARCH"
        --target "${DOCKER_IMAGE_NAME}:${DOCKER_MANIFEST_TAG}"


# Build stage
build_amd64:
  extends: .build
  stage: build
  variables:
    DOCKER_IMAGE_NAME: ${CI_REGISTRY_IMAGE}/${CI_COMMIT_REF_SLUG}
    DOCKER_IMAGE_TAG: ${CI_COMMIT_SHA}


# Push branch image
.push_branch:
  extends: .build
  stage: push
  variables:
    DOCKER_IMAGE_TAG: ${CI_COMMIT_REF_SLUG}
  only:
    - branches

push_branch_amd64:
  extends: .push_branch

push_branch_arm64:
  extends: .push_branch


# Setup manifests
manifest_branch:
  extends: .manifest
  stage: manifest
  only:
    - branches
  variables:
    DOCKER_MANIFEST_TAG: ${CI_COMMIT_REF_SLUG}
    DOCKER_IMAGE_TAG: ${CI_COMMIT_REF_SLUG}


# Push tagged release
.push_tag:
  extends: .build
  stage: push
  variables:
    DOCKER_IMAGE_TAG: ${CI_COMMIT_TAG}
  only:
    - tags
  except:
    - branches

push_tag_amd64:
  extends: .push_tag

push_tag_arm64:
  extends: .push_tag


# Setup manifests
.manifest_tag:
  extends: .manifest
  stage: manifest
  only:
    - tags
  except:
    - branches

push_tag_manifest:
  extends: .manifest_tag
  variables:
    DOCKER_MANIFEST_TAG: ${CI_COMMIT_TAG}
    DOCKER_IMAGE_TAG: ${CI_COMMIT_TAG}

push_tag_manifest:
  extends: .manifest_tag
  variables:
    DOCKER_MANIFEST_TAG: latest
    DOCKER_IMAGE_TAG: ${CI_COMMIT_TAG}
